apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }

// 打包源码jar
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.sourceFiles
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.compile
    }

// 打包文档jar
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}




dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["gson"]


    compile rootProject.ext.dependencies["eventbus"]
    implementation(rootProject.ext.dependencies["glide"]) {
        exclude group: 'com.android.support'
    }

    compile rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["Luban"]
    implementation rootProject.ext.dependencies["circleindicator"]
    compile(rootProject.ext.dependencies["convenientbanner"]) {
        exclude group: 'com.android.support'
    }
    /**富文本*/
    compile rootProject.ext.dependencies["richtext"]
    /*滑动隐藏*/
    compile rootProject.ext.dependencies["ByeBurger"]

    compile rootProject.ext.dependencies["arouter-api"]

    implementation 'com.umeng.analytics:analytics:latest.integration'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //*********************网络相关 RX
    compile rootProject.ext.dependencies["rxkotlin2"]
    compile rootProject.ext.dependencies["rxpermissions2"]

    compile rootProject.ext.dependencies["rxjava2"]
    compile rootProject.ext.dependencies["retrofit2"]
    compile rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    compile rootProject.ext.dependencies["retrofit-converter-gson2"]
    compile rootProject.ext.dependencies["okhttp3-logging-interceptor"]
    compile rootProject.ext.dependencies["rxandroid2"]
    compile rootProject.ext.dependencies["okhttp3"]

    implementation(rootProject.ext.dependencies["rxlifecycle2"]) {
        exclude group: 'com.android.support'
    }
    implementation(rootProject.ext.dependencies["rxlifecycle-components2"]) {
        exclude group: 'com.android.support'
    }
    implementation(rootProject.ext.dependencies["rxlifecycle-android2"]) {
        exclude group: 'com.android.support'
    }
    //*********************网络相关 RX

    //*********************UI组件
    compile project(':library_ui')

    //*********************UI组件

    //*********************阴影
    compile 'com.github.dmytrodanylyk.shadow-layout:library:1.0.3'
    //*********************阴影

    //*********************图片选择
    compile(rootProject.ext.dependencies["PictureSelector"]) {
        exclude group: 'com.android.support'
    }
    //*********************图片选择
}  